{"title":"Spatial Data Analysis in R","markdown":{"yaml":{"title":"Spatial Data Analysis in R","author":"Alex Skeels","date":"`r Sys.Date()`","format":"html","execute":{"warning":false,"fig-width":6,"fig-height":4}},"headingText":"**Introduction**","containsRefs":false,"markdown":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE, eval=FALSE)\n```\n\n\nToday we are going to learn to work with with one of the most commonly used spatial data types in R - observation records. Observation records are point samples where a variable of interest and the geographic coordinates, in latitude and longitude, have been recorded. Observation data in this format could record all kinds of information, from the location of McDonalds restaurants, to the presence of recorded cases of particular Covid-19 strains, to sightings of organisms in the wild. Today, we will focus on the latter. We will start by taking occurrence records for one of Australia's most iconic vertebrate species - the Frilled Lizard (*Chlamydosaurus kingii*) - from the Atlas of Living Australia (ALA) and identifying common errors or biases in spatial data. We will look at how to clean and subset the data in preparation for modeling the species distribution using a niche model.\n\n![The frilled-necked lizard (Chlamydosaurus kingii): Photo from D. Esquerre](frilled_lizard.jpg){fig-align=\"center\"}{width=300}\n\n## The Data\n\nThe ALA is a collaborative, digital, open infrastructure that pulls together Australian biodiversity data from multiple sources, making it accessible and reusable. It hosts an enormous amount of open source biodiversity data that can be readily downloaded, and even has it's own R package to help do so (galah: https://galah.ala.org.au/). As you need a registered email address to use Galah, today we will focus on a dataset I have already downloaded. For reproducibility, every dataset downloaded from ALA is given a Digital Object Identifier (DOI) so anyone can download the exact same one. Here is our one for the Frilled Lizard (https://doi.org/10.26197/ala.2e4809b8-791f-4adb-b1aa-f3e0fd94f86a) but you can also load this in from the distribution folder.\n\n<br> <br>\n\n------------------------------------------------------------------------\n\n<br> <br>\n\n# **Task 1**: Loading and visualising the data\n\n### **Task 1.1**: R libraries\n\n```{r}\n\n# use library() to load installed packages\nrequire(terra)\nrequire(sf)\nlibrary(ggplot2)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(dplyr)\nlibrary(geodata)\nlibrary(dismo)\nlibrary(gam)\nlibrary(randomForest)\n# if not installed use install.packages()\n#install.packages(\"terra\")\n#install.packages(\"sf\")\n\n```\n\n### **Task 1.2**: Load Cleaned ALA data\n\n```{r}\n\n# read in the cropped occurence records from last weeks workshop\nocc <- read.csv(\"distribution/frilled_lizard_ALA_cropped.csv\",header = T)\nahull_sf <- st_read(\"distribution/frilled_lizard_alpha_hull.shp\")\n```\n\n### **Task 1.3**: Bioclimatic Data from WorldClim\n\n```{r}\n# or (and this might be easier) load it in from the github\nbioclim_data <- rast(list.files(\"climate/wc2.1_5m_bio\", full.names = T))\n\nbioclim_data <- crop(bioclim_data, ext(110, 155, -45, -9))\n\n# plot a couple of layers\npar(mfrow=c(1,2))\nplot(bioclim_data[[1]]) # Bio01 is mean annual temperature\nplot(bioclim_data[[12]]) # Bio12 is mean annual precipitation\n\n```\n### **Task 2**: Background points\n\n```{r}\n\nahull_sf_buff <- st_buffer(ahull_sf, 250000)\nbck <- st_sample(ahull_sf_buff , 10000, type=\"random\")\n\n```\n\n### **Task 3**: Extract climate from occurence records\n\n```{r}\n# turn occurences into a spatVector\nocc_sp <- vect(occ, geom=c(\"X\", \"Y\"))\nbck_sp <- vect(bck)\n\n# plot the overlap\nplot(bioclim_data[[1]], main=\"Mean Annual Temperature\")\nplot(bck_sp , add=T, col=\"blue\", pch=3)\nplot(occ_sp , add=T, pch=20, col=\"red\")\n\n\n# combine presence and background points together\npres_abs <- vect(c(occ_sp, bck_sp))\n\n# extract environmental data from spatRaster\nbioclim_pres_abs <- extract(bioclim_data, pres_abs)\nbioclim_pres_abs <- na.omit(bioclim_pres_abs)\n\n# look at the extracted data\nhead(bioclim_pres_abs) \n\n# add varaible stating whether point is presence or background\nbioclim_pres_abs$presence <- NA\nbioclim_pres_abs$presence[1:nrow(occ)] <- 1\nbioclim_pres_abs$presence[(nrow(occ)+1):nrow(bioclim_pres_abs)] <- 0\n\n\n```\n\n### **Task 4**: Fit an Generalised Linear Model\n\nhttps://www.worldclim.org/data/bioclim.html\n\n```{r}\nlibrary(gam)\nlibrary(dismo)\nlibrary('caret')\n\n# first lets get the uncorrelated variables\ncorrelation_matrix <- cor(bioclim_pres_abs[,2:20])\ncorrelated <- findCorrelation(correlation_matrix)\nnames_correlated <- colnames(bioclim_pres_abs[,2:20])[correlated]\n\nbioclim_pres_abs_uncor <- bioclim_pres_abs[, which(!colnames(bioclim_pres_abs) %in% names_correlated)]\ncolnames(bioclim_pres_abs_uncor)\n\nformula_1 <- formula(paste0(\"presence ~ \", paste0(colnames(bioclim_pres_abs)[2:9], collapse = \" + \")))\n\n# Fit a GLM\nglm_sdm <- glm(formula_1, data=bioclim_pres_abs_uncor, family=binomial(link = \"logit\"))\nsummary(glm_sdm)\n\n# Fit a GAM\ngam_sdm <-gam::gam(presence ~ s(wc2.1_5m_bio_1,2) + s(wc2.1_5m_bio_3,2) + s(wc2.1_5m_bio_7,2) + s(wc2.1_5m_bio_8,2) + \n                 s(wc2.1_5m_bio_15,2) + s(wc2.1_5m_bio_16,2) +  s(wc2.1_5m_bio_18,2) + s(wc2.1_5m_bio_19,2),\n                 data=bioclim_pres_abs_uncor, family=binomial(link = \"logit\"))\nsummary(gam_sdm)\n\nmaxent_sdm <- maxnet(bioclim_pres_abs_uncor$presence, bioclim_pres_abs_uncor[, 2:9])\nmaxent_sdm\n\n# Fit a Random Forest\nbioclim_pres_abs_rf <- bioclim_pres_abs\nbioclim_pres_abs_rf$presence <- as.factor(bioclim_pres_abs_rf$presence)\nrf_sdm <- randomForest::randomForest(formula_1, data=bioclim_pres_abs_rf, na.action=na.omit)\n\nrf_sdm\n```\n### Evaulate models\n\n```{r}\n\np <- bioclim_pres_abs[which(bioclim_pres_abs$presence==1),]\na <- bioclim_pres_abs[which(bioclim_pres_abs$presence==0),]\nglm_eval <- evaluate(p=, \n         a=bioclim_pres_abs[which(bioclim_pres_abs$presence==0),], \n         model=glm_sdm)\n\ngam_eval <- evaluate(p=bioclim_pres_abs[which(bioclim_pres_abs$presence==1),], \n         a=bioclim_pres_abs[which(bioclim_pres_abs$presence==0),], \n         model=gam_sdm)\n\nmaxent_eval <- evaluate(p=bioclim_pres_abs[which(bioclim_pres_abs$presence==1),], \n         a=bioclim_pres_abs[which(bioclim_pres_abs$presence==0),], \n         model=maxent_sdm)\n\nrf_eval <- evaluate(p=bioclim_pres_abs[which(bioclim_pres_abs$presence==1),], \n         a=bioclim_pres_abs[which(bioclim_pres_abs$presence==0),], \n         model=rf_sdm)\n\npar(mfrow=c(2,2))\nplot(glm_eval, \"ROC\")\nplot(gam_eval, \"ROC\")\nplot(maxent_eval, \"ROC\")\nplot(rf_eval, \"ROC\")\n```\nHow did the models perform?\nAnything suspicious?\n\n```{r}\nK <- 5\nk_fold <- kfold(bioclim_pres_abs, k=K)\n\nauc_df <- data.frame(k=1:5, glm_AUC=NA, gam_AUC=NA, maxent_AUC=NA, rf_AUC=NA)\n\nfor(k in 1:K){\n  \n  # seperate folds into train and test data\n  train <- bioclim_pres_abs[k_fold!=k,]\n  test <- bioclim_pres_abs[k_fold==k,]\n  \n  # update model using new train subset\n  modtmp_glm <- update(glm_sdm, data = train)\n  modtmp_gam <- update(gam_sdm, data = train)\n  modtmp_maxent <- update(maxent_sdm, data = train)\n  modtmp_rf <- update(rf_sdm, data = train)\n\n  # evaluate model on test subset\n  glm_eval_tmp <- evaluate(p=test[which(test$presence==1),], a=test[which(test$presence==0),], model=modtmp_glm)\n  gam_eval_tmp <- evaluate(p=test[which(test$presence==1),], a=test[which(test$presence==0),], model=modtmp_gam)\n  maxent_eval_tmp <- evaluate(p=test[which(test$presence==1),], a=test[which(test$presence==0),], model=modtmp_maxent)\n  rf_eval_tmp <- evaluate(p=test[which(test$presence==1),], a=test[which(test$presence==0),], model=modtmp_rf)\n\n  # store the AUC values\n  auc_df[k, \"glm_AUC\"] <- glm_eval_tmp@auc\n  auc_df[k, \"gam_AUC\"] <- gam_eval_tmp@auc\n  auc_df[k, \"maxent_AUC\"] <- maxent_eval_tmp@auc\n  auc_df[k, \"rf_AUC\"] <- rf_eval_tmp@auc\n}\n```\n\nAre the AUC scores in K-fold very different from scores from the full model?\nWhat does this say about model transferability on new data?\n\n### Plotting model predictions and estimating species distributions\n\n```{r}\nglm_prediction <- predict(bioclim_data, glm_sdm)\ngam_prediction <- predict(bioclim_data, gam_sdm)\nrf_prediction <- predict(bioclim_data, rf_sdm)\n\npar(mfrow=c(2,2))\nplot(glm_prediction, main=\"glm\")\nplot(gam_prediction, main=\"gam\")\nplot(rf_prediction, main=\"rf\")\n```\n\nThresholding\n\n```{r}\nglm_threshold_val <- threshold(glm_eval, stat = \"kappa\")\ngam_threshold_val <- threshold(gam_eval, stat = \"kappa\")\nrf_threshold_val  <- threshold(rf_eval , stat = \"kappa\")\n\npar(mfrow=c(2,2))\nplot(glm_prediction > glm_threshold_val, main=\"glm binary\")\nplot(gam_prediction > gam_threshold_val, main=\"gam binary\")\nplot(rf_prediction  > rf_threshold_val, main=\"rf binary\")\n```\n","srcMarkdownNoYaml":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE, eval=FALSE)\n```\n\n# **Introduction**\n\nToday we are going to learn to work with with one of the most commonly used spatial data types in R - observation records. Observation records are point samples where a variable of interest and the geographic coordinates, in latitude and longitude, have been recorded. Observation data in this format could record all kinds of information, from the location of McDonalds restaurants, to the presence of recorded cases of particular Covid-19 strains, to sightings of organisms in the wild. Today, we will focus on the latter. We will start by taking occurrence records for one of Australia's most iconic vertebrate species - the Frilled Lizard (*Chlamydosaurus kingii*) - from the Atlas of Living Australia (ALA) and identifying common errors or biases in spatial data. We will look at how to clean and subset the data in preparation for modeling the species distribution using a niche model.\n\n![The frilled-necked lizard (Chlamydosaurus kingii): Photo from D. Esquerre](frilled_lizard.jpg){fig-align=\"center\"}{width=300}\n\n## The Data\n\nThe ALA is a collaborative, digital, open infrastructure that pulls together Australian biodiversity data from multiple sources, making it accessible and reusable. It hosts an enormous amount of open source biodiversity data that can be readily downloaded, and even has it's own R package to help do so (galah: https://galah.ala.org.au/). As you need a registered email address to use Galah, today we will focus on a dataset I have already downloaded. For reproducibility, every dataset downloaded from ALA is given a Digital Object Identifier (DOI) so anyone can download the exact same one. Here is our one for the Frilled Lizard (https://doi.org/10.26197/ala.2e4809b8-791f-4adb-b1aa-f3e0fd94f86a) but you can also load this in from the distribution folder.\n\n<br> <br>\n\n------------------------------------------------------------------------\n\n<br> <br>\n\n# **Task 1**: Loading and visualising the data\n\n### **Task 1.1**: R libraries\n\n```{r}\n\n# use library() to load installed packages\nrequire(terra)\nrequire(sf)\nlibrary(ggplot2)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(dplyr)\nlibrary(geodata)\nlibrary(dismo)\nlibrary(gam)\nlibrary(randomForest)\n# if not installed use install.packages()\n#install.packages(\"terra\")\n#install.packages(\"sf\")\n\n```\n\n### **Task 1.2**: Load Cleaned ALA data\n\n```{r}\n\n# read in the cropped occurence records from last weeks workshop\nocc <- read.csv(\"distribution/frilled_lizard_ALA_cropped.csv\",header = T)\nahull_sf <- st_read(\"distribution/frilled_lizard_alpha_hull.shp\")\n```\n\n### **Task 1.3**: Bioclimatic Data from WorldClim\n\n```{r}\n# or (and this might be easier) load it in from the github\nbioclim_data <- rast(list.files(\"climate/wc2.1_5m_bio\", full.names = T))\n\nbioclim_data <- crop(bioclim_data, ext(110, 155, -45, -9))\n\n# plot a couple of layers\npar(mfrow=c(1,2))\nplot(bioclim_data[[1]]) # Bio01 is mean annual temperature\nplot(bioclim_data[[12]]) # Bio12 is mean annual precipitation\n\n```\n### **Task 2**: Background points\n\n```{r}\n\nahull_sf_buff <- st_buffer(ahull_sf, 250000)\nbck <- st_sample(ahull_sf_buff , 10000, type=\"random\")\n\n```\n\n### **Task 3**: Extract climate from occurence records\n\n```{r}\n# turn occurences into a spatVector\nocc_sp <- vect(occ, geom=c(\"X\", \"Y\"))\nbck_sp <- vect(bck)\n\n# plot the overlap\nplot(bioclim_data[[1]], main=\"Mean Annual Temperature\")\nplot(bck_sp , add=T, col=\"blue\", pch=3)\nplot(occ_sp , add=T, pch=20, col=\"red\")\n\n\n# combine presence and background points together\npres_abs <- vect(c(occ_sp, bck_sp))\n\n# extract environmental data from spatRaster\nbioclim_pres_abs <- extract(bioclim_data, pres_abs)\nbioclim_pres_abs <- na.omit(bioclim_pres_abs)\n\n# look at the extracted data\nhead(bioclim_pres_abs) \n\n# add varaible stating whether point is presence or background\nbioclim_pres_abs$presence <- NA\nbioclim_pres_abs$presence[1:nrow(occ)] <- 1\nbioclim_pres_abs$presence[(nrow(occ)+1):nrow(bioclim_pres_abs)] <- 0\n\n\n```\n\n### **Task 4**: Fit an Generalised Linear Model\n\nhttps://www.worldclim.org/data/bioclim.html\n\n```{r}\nlibrary(gam)\nlibrary(dismo)\nlibrary('caret')\n\n# first lets get the uncorrelated variables\ncorrelation_matrix <- cor(bioclim_pres_abs[,2:20])\ncorrelated <- findCorrelation(correlation_matrix)\nnames_correlated <- colnames(bioclim_pres_abs[,2:20])[correlated]\n\nbioclim_pres_abs_uncor <- bioclim_pres_abs[, which(!colnames(bioclim_pres_abs) %in% names_correlated)]\ncolnames(bioclim_pres_abs_uncor)\n\nformula_1 <- formula(paste0(\"presence ~ \", paste0(colnames(bioclim_pres_abs)[2:9], collapse = \" + \")))\n\n# Fit a GLM\nglm_sdm <- glm(formula_1, data=bioclim_pres_abs_uncor, family=binomial(link = \"logit\"))\nsummary(glm_sdm)\n\n# Fit a GAM\ngam_sdm <-gam::gam(presence ~ s(wc2.1_5m_bio_1,2) + s(wc2.1_5m_bio_3,2) + s(wc2.1_5m_bio_7,2) + s(wc2.1_5m_bio_8,2) + \n                 s(wc2.1_5m_bio_15,2) + s(wc2.1_5m_bio_16,2) +  s(wc2.1_5m_bio_18,2) + s(wc2.1_5m_bio_19,2),\n                 data=bioclim_pres_abs_uncor, family=binomial(link = \"logit\"))\nsummary(gam_sdm)\n\nmaxent_sdm <- maxnet(bioclim_pres_abs_uncor$presence, bioclim_pres_abs_uncor[, 2:9])\nmaxent_sdm\n\n# Fit a Random Forest\nbioclim_pres_abs_rf <- bioclim_pres_abs\nbioclim_pres_abs_rf$presence <- as.factor(bioclim_pres_abs_rf$presence)\nrf_sdm <- randomForest::randomForest(formula_1, data=bioclim_pres_abs_rf, na.action=na.omit)\n\nrf_sdm\n```\n### Evaulate models\n\n```{r}\n\np <- bioclim_pres_abs[which(bioclim_pres_abs$presence==1),]\na <- bioclim_pres_abs[which(bioclim_pres_abs$presence==0),]\nglm_eval <- evaluate(p=, \n         a=bioclim_pres_abs[which(bioclim_pres_abs$presence==0),], \n         model=glm_sdm)\n\ngam_eval <- evaluate(p=bioclim_pres_abs[which(bioclim_pres_abs$presence==1),], \n         a=bioclim_pres_abs[which(bioclim_pres_abs$presence==0),], \n         model=gam_sdm)\n\nmaxent_eval <- evaluate(p=bioclim_pres_abs[which(bioclim_pres_abs$presence==1),], \n         a=bioclim_pres_abs[which(bioclim_pres_abs$presence==0),], \n         model=maxent_sdm)\n\nrf_eval <- evaluate(p=bioclim_pres_abs[which(bioclim_pres_abs$presence==1),], \n         a=bioclim_pres_abs[which(bioclim_pres_abs$presence==0),], \n         model=rf_sdm)\n\npar(mfrow=c(2,2))\nplot(glm_eval, \"ROC\")\nplot(gam_eval, \"ROC\")\nplot(maxent_eval, \"ROC\")\nplot(rf_eval, \"ROC\")\n```\nHow did the models perform?\nAnything suspicious?\n\n```{r}\nK <- 5\nk_fold <- kfold(bioclim_pres_abs, k=K)\n\nauc_df <- data.frame(k=1:5, glm_AUC=NA, gam_AUC=NA, maxent_AUC=NA, rf_AUC=NA)\n\nfor(k in 1:K){\n  \n  # seperate folds into train and test data\n  train <- bioclim_pres_abs[k_fold!=k,]\n  test <- bioclim_pres_abs[k_fold==k,]\n  \n  # update model using new train subset\n  modtmp_glm <- update(glm_sdm, data = train)\n  modtmp_gam <- update(gam_sdm, data = train)\n  modtmp_maxent <- update(maxent_sdm, data = train)\n  modtmp_rf <- update(rf_sdm, data = train)\n\n  # evaluate model on test subset\n  glm_eval_tmp <- evaluate(p=test[which(test$presence==1),], a=test[which(test$presence==0),], model=modtmp_glm)\n  gam_eval_tmp <- evaluate(p=test[which(test$presence==1),], a=test[which(test$presence==0),], model=modtmp_gam)\n  maxent_eval_tmp <- evaluate(p=test[which(test$presence==1),], a=test[which(test$presence==0),], model=modtmp_maxent)\n  rf_eval_tmp <- evaluate(p=test[which(test$presence==1),], a=test[which(test$presence==0),], model=modtmp_rf)\n\n  # store the AUC values\n  auc_df[k, \"glm_AUC\"] <- glm_eval_tmp@auc\n  auc_df[k, \"gam_AUC\"] <- gam_eval_tmp@auc\n  auc_df[k, \"maxent_AUC\"] <- maxent_eval_tmp@auc\n  auc_df[k, \"rf_AUC\"] <- rf_eval_tmp@auc\n}\n```\n\nAre the AUC scores in K-fold very different from scores from the full model?\nWhat does this say about model transferability on new data?\n\n### Plotting model predictions and estimating species distributions\n\n```{r}\nglm_prediction <- predict(bioclim_data, glm_sdm)\ngam_prediction <- predict(bioclim_data, gam_sdm)\nrf_prediction <- predict(bioclim_data, rf_sdm)\n\npar(mfrow=c(2,2))\nplot(glm_prediction, main=\"glm\")\nplot(gam_prediction, main=\"gam\")\nplot(rf_prediction, main=\"rf\")\n```\n\nThresholding\n\n```{r}\nglm_threshold_val <- threshold(glm_eval, stat = \"kappa\")\ngam_threshold_val <- threshold(gam_eval, stat = \"kappa\")\nrf_threshold_val  <- threshold(rf_eval , stat = \"kappa\")\n\npar(mfrow=c(2,2))\nplot(glm_prediction > glm_threshold_val, main=\"glm binary\")\nplot(gam_prediction > gam_threshold_val, main=\"gam binary\")\nplot(rf_prediction  > rf_threshold_val, main=\"rf binary\")\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":6,"fig-height":4,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"Week_12_practical_1.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.551","editor":"visual","title":"Spatial Data Analysis in R","author":"Alex Skeels","date":"`r Sys.Date()`"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":[]}